cmake_minimum_required(VERSION 3.2)

project(Switch VERSION 0.3.4)

option(BUILD_SWITCH_CORE "Build Switch.Core library" ON)
option(BUILD_SWITCH_SYSTEM "Build Switch.System library" OFF)
option(BUILD_SWITCH_SYSTEM_DRAWING "Build Switch.System.Drawing library" ON)
option(BUILD_SWITCH_SYSTEM_WINDOWS_FORMS "Build Switch.System.Windows.Forms library" ON)
option(BUILD_SWITCH_TUNIT "Build Switch.TUnit and Switch.TUnit.Main libraries" ON)
option(BUILD_TESTS "Build tests" OFF)

enable_testing()

if (APPLE)
  SET(CMAKE_CXX_FLAGS "-Wall -Wextra -Wpedantic -Wdeprecated-declarations -Wno-unknown-pragmas -Wno-unused-parameter")
elseif (UNIX)
  SET(CMAKE_CXX_FLAGS "-Wall -Wpedantic -Wdeprecated-declarations -Wno-unknown-pragmas -Wno-unused-parameter")
elseif (MSVC)
  set(CMAKE_CXX_FLAGS "/D_WINSOCK_DEPRECATED_NO_WARNINGS /DCURL_STATICLIB /DWIN32 /D_WINDOWS /DUNICODE /D_UNICODE /D_CRT_SECURE_NO_WARNINGS /D_CRT_NON_CONFORMING_SWPRINTFS /Zm1000 /bigobj /EHsc /GR /MP /Oy- /W4 /wd4003 /wd4100 /wd4127 /wd4132 /wd4133 /wd4189 /wd4244 /wd4245 /wd4310 /wd4312 /wd4355 /wd4389 /wd4456 /wd4458 /wd4505 /wd4510 /wd4512 /wd4610 /wd4701 /wd4702 /wd4706 /wd4996")
endif ()

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

if(NOT CMAKE_DEBUG_POSTFIX)
  set(CMAKE_DEBUG_POSTFIX d)
endif()

if ("${CMAKE_BUILD_TYPE}" STREQUAL "")
  set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
else ()
  set(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/${CMAKE_BUILD_TYPE})
endif ()

include(scripts/cmake/GroupSources.cmake)
include(scripts/cmake/SwitchDependencies.cmake)

file(WRITE src/Switch/include/Switch/Switch.hpp "#pragma once\n\n")

# Summary
message(STATUS "Building Switch ${Switch_VERSION}")
if (BUILD_SWITCH_CORE)
  message(STATUS "  [X] Switch.Core")
  add_subdirectory("src/Switch.Core")
file(APPEND src/Switch/include/Switch/Switch.hpp "#include \"Switch/Core.hpp\"\n")
else()
  message(STATUS "  [ ] Switch.Core")
endif()
if (BUILD_SWITCH_SYSTEM)
  message(STATUS "  [X] Switch.System")
  add_subdirectory("src/Switch.System")
file(APPEND src/Switch/include/Switch/Switch.hpp "#include \"Switch/System.hpp\"\n")
else()
  message(STATUS "  [ ] Switch.System")
endif()
if (BUILD_SWITCH_SYSTEM_DRAWING)
  message(STATUS "  [X] Switch.System.Drawing")
  add_subdirectory("src/Switch.System.Drawing")
file(APPEND src/Switch/include/Switch/Switch.hpp "#include \"Switch/System.Drawing.hpp\"\n")
else()
  message(STATUS "  [ ] Switch.System.Drawing")
endif()
if (BUILD_SWITCH_SYSTEM_WINDOWS_FORMS)
  message(STATUS "  [X] Switch.System.Windows.Forms")
  add_subdirectory("src/Switch.System.Windows.Forms")
file(APPEND src/Switch/include/Switch/Switch.hpp "#include \"Switch/System.Windows.Forms.hpp\"\n")
else()
  message(STATUS "  [ ] Switch.System.Windows.Forms")
endif()
if (BUILD_SWITCH_TUNIT)
  message(STATUS "  [X] Switch.TUnit")
  add_subdirectory("src/Switch.TUnit")
  message(STATUS "  [X] Switch.TUnit.Main")
  add_subdirectory("src/Switch.TUnit.Main")
file(APPEND src/Switch/include/Switch/Switch.hpp "#include \"Switch/TUnit.hpp\"\n")
else()
  message(STATUS "  [ ] Switch.TUnit")
  message(STATUS "  [ ] Switch.TUnit.Main")
endif()
if (BUILD_TESTS)
  message(STATUS "Building Switch Tests")
  if (BUILD_SWITCH_CORE)
    message(STATUS "  [X] Switch.Core.ManualTests")
    add_subdirectory("tests/Switch.Core.ManualTests")
    message(STATUS "  [X] Switch.Core.UnitTests")
    add_subdirectory("tests/Switch.Core.UnitTests")
  else()
    message(STATUS "  [ ] Switch.Core.ManualTests")
    message(STATUS "  [ ] Switch.Core.UnitTests")
  endif()
  if (BUILD_SWITCH_SYSTEM)
    message(STATUS "  [X] Switch.System.ManualTests")
    add_subdirectory("tests/Switch.System.ManualTests")
    message(STATUS "  [X] Switch.System.UnitTests")
    add_subdirectory("tests/Switch.System.UnitTests")
  else()
    message(STATUS "  [ ] Switch.System.ManualTests")
    message(STATUS "  [ ] Switch.System.UnitTests")
  endif()
  if (BUILD_SWITCH_SYSTEM_DRAWING)
    message(STATUS "  [X] Switch.System.Drawing.ManualTests")
    add_subdirectory("tests/Switch.System.Drawing.ManualTests")
    message(STATUS "  [X] Switch.System.Drawing.UnitTests")
    add_subdirectory("tests/Switch.System.Drawing.UnitTests")
  else()
    message(STATUS "  [ ] Switch.System.Drawing.ManualTests")
    message(STATUS "  [ ] Switch.System.Drawing.UnitTests")
  endif()
  if (BUILD_SWITCH_SYSTEM_WINDOWS_FORMS)
    message(STATUS "  [X] Switch.System.Windows.Forms.ManualTests")
    add_subdirectory("tests/Switch.System.Windows.Forms.ManualTests")
    message(STATUS "  [X] Switch.System.Windows.Forms.UnitTests")
    add_subdirectory("tests/Switch.System.Windows.Forms.UnitTests")
  else()
    message(STATUS "  [ ] Switch.System.Windows.Forms.ManualTests")
    message(STATUS "  [ ] Switch.System.Windows.Forms.UnitTests")
  endif()
  if (BUILD_SWITCH_TUNIT)
    message(STATUS "  [X] Switch.TUnit.ManualTests")
    add_subdirectory("tests/Switch.TUnit.ManualTests")
    message(STATUS "  [X] Switch.TUnit.UnitTests")
    add_subdirectory("tests/Switch.TUnit.UnitTests")
  else()
    message(STATUS "  [ ] Switch.TUnit.ManualTests")
    message(STATUS "  [ ] Switch.TUnit.UnitTests")
  endif()
endif()

add_subdirectory("src/Switch")

message(STATUS "Compiler [${CMAKE_CXX_COMPILER_ID}]")
message(STATUS "System [${CMAKE_SYSTEM}]")
message(STATUS "Build type [${CMAKE_BUILD_TYPE}]")
message(STATUS "Install prefix [${CMAKE_INSTALL_PREFIX}]")

install(EXPORT Switch DESTINATION cmake)
install(FILES scripts/cmake/SwitchConfig.cmake scripts/cmake/SwitchDependencies.cmake DESTINATION cmake)

find_package(Doxygen)
if(DOXYGEN_FOUND)
  configure_file(${CMAKE_CURRENT_SOURCE_DIR}/docs/Doxygen/Switch.Doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile @ONLY)
  add_custom_target(documentation ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} COMMENT "Generating API documentation with Doxygen" VERBATIM)
endif(DOXYGEN_FOUND)
