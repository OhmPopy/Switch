find_package(call_stack REQUIRED)
find_package(CURL REQUIRED)
find_package(easywsclient REQUIRED)
find_package(FLTK REQUIRED)
find_package(GTest REQUIRED)
find_package(JPEG REQUIRED)
find_package(PNG REQUIRED)
find_package(Rs232 REQUIRED)
find_package(Threads REQUIRED)
find_package(ZLIB REQUIRED)

message(STATUS "call_stack_LIBRARIES=${call_stack_LIBRARIES}")
message(STATUS "CURL_LIBRARIES=${CURL_LIBRARIES}")
message(STATUS "easywsclient_LIBRARIES=${easywsclient_LIBRARIES}")
message(STATUS "FLTK_LIBRARIES=${FLTK_LIBRARIES}")
message(STATUS "GTEST_LIBRARIES=${GTEST_LIBRARIES}")
message(STATUS "JPEG_LIBRARIES=${JPEG_LIBRARIES}")
message(STATUS "PNG_LIBRARIES=${PNG_LIBRARIES}")
message(STATUS "RS232_LIBRARIES=${RS232_LIBRARIES}")
message(STATUS "CMAKE_THREAD_LIBS_INIT=${CMAKE_THREAD_LIBS_INIT}")
message(STATUS "ZLIB_LIBRARIES=${ZLIB_LIBRARIES}")

if (APPLE)
  set(PCF_GUI MACOSX_BUNDLE)
  set(STANDARD_CORE_LINK_LIBRARIES dl)	
  set(STANDARD_GRAPHIC_LINK_LIBRARIES "-framework Carbon -framework Cocoa -framework ApplicationServices -framework Foundation ${FLTK_LIBRARIES}")
elseif(UNIX)
  set(PCF_GUI)
  find_package(PkgConfig)
  pkg_check_modules(GTKMM gtkmm-3.0)
  if(NOT GTKMM_FOUND)
      message(FATAL_ERROR "gtkmm-3.0 not found!")
  endif()
  link_directories(${GTKMM_LIBRARY_DIRS})
  include_directories(${GTKMM_INCLUDE_DIRS})
  set(STANDARD_CORE_LINK_LIBRARIES dl rt uuid)
  set(STANDARD_GRAPHIC_LINK_LIBRARIES ${GTKMM_LIBRARIES} ${FLTK_LIBRARIES})
elseif(MSVC)
  set(PCF_GUI WIN32)
  set(STANDARD_CORE_LINK_LIBRARIES Ws2_32.lib Iphlpapi.lib Rpcrt4.lib)    
  set(STANDARD_GRAPHIC_LINK_LIBRARIES Uxtheme ${FLTK_LIBRARIES})
endif ()	
